(define sexpr->ocaml-string
(lambda (e)
(cond
((boolean? e)
(if e "Bool true" "Bool false"))
((null? e) "Nil")
((char? e) (format "Char '~a'" e))
((symbol? e) (format "Symbol \"~a\"" e))
((string? e) (format "String \"~a\"" e) )
 ((flonum? e) (format "Number (Float ~a)" e))
 ((integer? e) (format "Number (Fraction(~a, 1))" e))
 ((ratnum? e)
 (format "Number (Fraction(~a, ~a))" (numerator e) (denominator e)))
 ((pair? e)
 (format "Pair(~a, ~a)"
 (sexpr->ocaml-string (car e))
 (sexpr->ocaml-string (cdr e))))
 (else (error 'sexpr->ocaml-string
 (format "Unsupported type: ~a" e))))))


 (define print-template
 (lambda (sexpr)
 (display (sexpr->ocaml-string sexpr))))
